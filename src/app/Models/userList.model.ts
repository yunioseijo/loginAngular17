// Generated by https://quicktype.io

  export interface IUserListResponse {
  totalUsers:       number;
  totalActiveUsers: number;
  totalItemCount:   number;
  page:             number;
  pageCount:        number;
  items:            IUserInfoResponse[];
  extendedDetails:  null;
  pageItemCount:    number;
}

export interface IUserInfoResponse {
  userId:                  number;
  name:                    string;
  email:                   string;
  culture:                 Culture;
  createdDate:             Date;
  cancelledDate:           null;
  sourceIp:                null;
  computersCount:          number;
  processedComputersCount: number;
  uploadingComputersCount: number;
  driveProcessedCount:     number;
  driveUploadingCount:     number;
  hasDrivesUploading:      boolean;
  hasProcessedComputers:   boolean;
  partnerName:             null;
  partnerId:               null;
  isOnline:                boolean;
  lastOnlineDate:          null;
  isDeleted:               boolean;
  isIntegrator:            boolean;
}

export enum Culture {
  EnUS = "en-US",
  EsES = "es-ES",
  PtPT = "pt-PT",
}

export interface IUserListFilterRequest {
    FreeText: string,
    HasDrivesUploading: true,
    HasDrivesProcessingUpload: true,
    HasDrivesBrowsable: true,
    Partner: string,
    ShowDeleted: true,
    ShowFromLoozend: true,
    ShowFromIntegrators: true,
    ShowFromWhitebrand: true,
    ConnectionStatus: number,
    PartnerStatus: number
  }
  export class UserListFilterRequest2 {
    FreeText: string | undefined;
    HasDrivesUploading: true | undefined;
    HasDrivesProcessingUpload: true | undefined;
    HasDrivesBrowsable: true | undefined;
    Partner: string | undefined;
    ShowDeleted: true | undefined;
    ShowFromLoozend: true | undefined;
    ShowFromIntegrators: true | undefined;
    ShowFromWhitebrand: true | undefined;
    ConnectionStatus: number | undefined;
    PartnerStatus: number | undefined;

    constructor() {
        this.FreeText = "";
        this.HasDrivesUploading = true;
        this.HasDrivesProcessingUpload = true;
        this.HasDrivesBrowsable = true;
        this.Partner = "";
        this.ShowDeleted = true;
        this.ShowFromLoozend = true;
        this.ShowFromIntegrators = true;
        this.ShowFromWhitebrand = true;
        this.ConnectionStatus = 0;
        this.PartnerStatus = 0;
      }
  }

  export class UserListFilterRequest {
    private _freeText: string | undefined;
    private _hasDrivesUploading: boolean | undefined;
    private _hasDrivesProcessingUpload: boolean | undefined;
    private _hasDrivesBrowsable: boolean | undefined;
    private _partner: string | undefined;
    private _showDeleted: boolean | undefined;
    private _showFromLoozend: boolean | undefined;
    private _showFromIntegrators: boolean | undefined;
    private _showFromWhitebrand: boolean | undefined;
    private _connectionStatus: number | undefined;
    private _partnerStatus: number | undefined;

    constructor(init?: Partial<UserListFilterRequest>) {
        this._freeText = init?.freeText || "";
        this._hasDrivesUploading = init?.hasDrivesUploading ?? true;
        this._hasDrivesProcessingUpload = init?.hasDrivesProcessingUpload ?? true;
        this._hasDrivesBrowsable = init?.hasDrivesBrowsable ?? true;
        this._partner = init?.partner || "";
        this._showDeleted = init?.showDeleted ?? true;
        this._showFromLoozend = init?.showFromLoozend ?? true;
        this._showFromIntegrators = init?.showFromIntegrators ?? true;
        this._showFromWhitebrand = init?.showFromWhitebrand ?? true;
        this._connectionStatus = init?.connectionStatus ?? 0;
        this._partnerStatus = init?.partnerStatus ?? 0;
    }
    toObject(): any {
        return {
          freeText: this.freeText,
          hasDrivesUploading: this.hasDrivesUploading,
          hasDrivesProcessingUpload: this.hasDrivesProcessingUpload,
          hasDrivesBrowsable: this.hasDrivesBrowsable,
          partner: this.partner,
          showDeleted: this.showDeleted,
          showFromLoozend: this.showFromLoozend,
          showFromIntegrators: this.showFromIntegrators,
          showFromWhitebrand: this.showFromWhitebrand,
          connectionStatus: this.connectionStatus,
          partnerStatus: this.partnerStatus
        };
      }

    // Getters y Setters
    get freeText(): string | undefined {
        return this._freeText;
    }

    set freeText(value: string | undefined) {
        this._freeText = value;
    }
    get partner(): string | undefined {
        return this._partner;
    }

    set partner(value: string | undefined) {
        this._partner = value;
    }

    get hasDrivesUploading(): boolean | undefined {
        return this._hasDrivesUploading;
    }

    set hasDrivesUploading(value: boolean | undefined) {
        this._hasDrivesUploading = value;
    }
    get showFromLoozend(): boolean | undefined {
        return this._showFromLoozend;
    }

    set showFromLoozend(value: boolean | undefined) {
        this.showFromLoozend = value;
    }
    get showFromIntegrators(): boolean | undefined {
        return this._showFromIntegrators;
    }

    set showFromIntegrators(value: boolean | undefined) {
        this.showFromIntegrators = value;
    }
    get showFromWhitebrand(): boolean | undefined {
        return this._showFromWhitebrand;
    }

    set showFromWhitebrand(value: boolean | undefined) {
        this.showFromWhitebrand = value;
    }
    get showDeleted(): boolean | undefined {
        return this._showDeleted;
    }

    set showDeleted(value: boolean | undefined) {
        this._showDeleted = value;
    }
    get hasDrivesProcessingUpload(): boolean | undefined {
        return this._hasDrivesProcessingUpload;
    }

    set hasDrivesProcessingUpload(value: boolean | undefined) {
        this._hasDrivesProcessingUpload = value;
    }
    get hasDrivesBrowsable(): boolean | undefined {
        return this._hasDrivesBrowsable;
    }

    set hasDrivesBrowsable(value: boolean | undefined) {
        this._hasDrivesBrowsable = value;
    }



    get connectionStatus(): number | undefined {
        return this._connectionStatus;
    }

    set connectionStatus(value: number | undefined) {
        this._connectionStatus = value;
    }

    get partnerStatus(): number | undefined {
        return this._partnerStatus;
    }

    set partnerStatus(value: number | undefined) {
        this._partnerStatus = value;
    }
}



export interface IUserListFilterRequest2 {
    Filter: IFilterUsers;
    Order:  IOrderUsers;
    Paging: IPagingUsers;
}

export interface IFilterUsers {
    ConnectionStatus: string;
    PartnerStatus:    string;
}

export interface IOrderUsers {
    IsAscending: boolean;
    FieldName:   string;
}

export interface IPagingUsers {
    Page:     number;
    PageSize: number;
}
